#!/usr/bin/env bash
#

# Set with the flags "-e", "-u","-o pipefail" cause the script to fail
# if certain things happen, which is a good thing.  Otherwise, we can
# get hidden bugs that are hard to discover.
set -euo pipefail

# use notify-send if run in dumb term
_out="echo"
if [[ ${TERM} == 'dumb' ]]; then
    _out="notify-send"
fi

output(){
    ${_out} "dmgames" "$@"
}


main() {
# An array of options to choose.
declare -a options=(
"Untitled Goose Game"
"Slain: Back from Hell"
"Abandon Ship"
"Catmaze"
"Forsaken Remastered"
"Drifting Lands"
"Osu Lazer"
"NeuroVoider & ScourgeBringer"
"Spelunky Duology"
"Wizard of Legend"
"Titan Souls"
"The Swapper"
"The Citadel"
"Olija"
"Reventure"
"Super Meat Boy"
"Donut County"
"Knightin"
"Kingdoms and Castles"
"Katana ZERO"
"Butcher"
"A Short Hike"
"AER: Memories of Old"
"Antichamber"
"Slipstream"
"Tangledeep"
"Backland"
"Blasphemous"
"GoNNER Duology"
"Superbrothers: Sword & Sworcery EP"
"198X"
"Another Star"
"Brigador Up Armored Edition"
"Cathedral"
"Contra Anniversary Collection"
"Faster Than Light"
"MindSeize"
"Slime Rancher"
"Owlboy"
"Broforce"
"Astromenace"
#"Reigns Collection"
"Dustforce"
"Undertale"
"The Binding of Isaac: Afterbirth"
"Apricots"
"Nsnake"
"Doom 3 BFG"
"Kingdom Rush Collection"
"Besiege"
"Cyber Shadow"
"Enter the Gungeon"
"Factorio"
"Papers Please"
"Crawl"
"SteamWorld Collection"
"Celeste Duology"
"Cuphead"
"Getting Over It"
"Hollow Knight"
"Hotline Miami Duology"
"Mindustry"
"Minecraft: Java Edition"
"Noita"
"Openspades"
"Plague Inc. Evolved"
"Shovel Knight: Treasure Trove"
"Steam Client"
"Stardew Valley"
"SUPERHOT Duology"
"Tux Games"
"Totally Accurate Battle Simulator"
"Veloren"
)

    # Piping the above array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${options[@]}" | sort | dmenu -l 21 -fn Monospace-10 -g 4 -i -p 'Choose game:' "${@}")


    # What to do when/if we choose one of the options.
    case $choice in
            'Hollow Knight')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblankmode=0 gamemoderun ~/.games/Hollow.Knight/start.sh
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
    'SUPERHOT Duology')
        answer="$(echo -e "SUPERHOT\nSUPERHOT: MIND CONTROL DELETE" | dmenu -i -p "Execute?")"

        if [[ $answer == "SUPERHOT" ]]; then
            vblank_mode=0 gamemoderun sh ~/.games/SUPERHOT/SUPERHOT/start.sh -high
        fi

        if [[ $answer == "SUPERHOT: MIND CONTROL DELETE" ]]; then
            vblank_mode=0 gamemoderun sh ~/.games/SUPERHOT/SUPERHOT.MIND.CONTROL.DELETE/start.sh -high
        fi
        ;;
    'Celeste Duology')
        answer="$(echo -e "Celeste\nCeleste 2" | dmenu -i -p "Execute?")"

        if [[ $answer == "Celeste" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/Celeste/Celeste/start.sh -high
        fi

        if [[ $answer == "Celeste 2" ]]; then
            vblankmode=0 gamemoderun ~/.games/Celeste/Celeste.2/celeste2 -high
        fi
        ;;
    'Totally Accurate Battle Simulator')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/Totally.Accurate.Battle.Simulator/start -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
    'Plague Inc. Evolved')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/.Plague.Inc.Evolved/run.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
    'Shovel Knight: Treasure Trove')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/Shovel.Knight/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
    'Stardew Valley')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/.Stardew.Valley/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
    'Besiege')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/.Besiege/run.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
   'Hotline Miami Duology')
        answer="$(echo -e "Hotline Miami\nHotline Miami 2: Wrong Number" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblank_mode=0 gamemoderun sh ~/.games/.Hotline.Miami/Hotline.Miami/start.sh -high
        fi

        if [[ $answer == "Hotline Miami 2: Wrong Number" ]]; then
            vblankmode=0 gamemoderun sh ~/.games/.Hotline.Miami/Hotline.Miami.2.Wrong.Number/start.sh -high
        fi
        ;;
   'Getting Over It')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/.Getting.Over.It/run.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
   'Veloren')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun veloren-voxygen -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
  'Minecraft: Java Edition')
        answer="$(echo -e "Execute Lunar with gamemoderun\nExecute Lunar without gamemoderun\nExecute Minecraft with launch commands\nExecute Minecraft normally\nExecute Lunar normally" | dmenu -l 20 -i -p "Execute?")"

        if [[ $answer == "Execute Lunar with gamemoderun" ]]; then
            vblank_mode=0 gamemoderun lunarclient -high
        fi
        
        if [[ $answer == "Execute Lunar without gamemoderun" ]]; then
           vblank_mode=0 lunarclient -high
        fi

        if [[ $answer == "Execute Lunar normally" ]]; then
           lunarclient
        fi
        
        if [[ $answer == "Execute Minecraft with launch commands" ]]; then
          vblank_mode=0 gamemoderun minecraft-launcher -high
        fi

        if [[ $answer == "Execute Minecraft normally" ]]; then
            minecraft-launcher
        fi
        ;;
  'Apricots')
        answer="$(vblank_mode=0 gamemoderun apricots -high)"
        ;;
 'Tux.games')
        answer="$(echo -e "SuperTuxKart\nSuperTux 2\nTux Racer" | dmenu -l 20 -i -p "Execute?")"

        if [[ $answer == "SuperTuxKart" ]]; then
            vblank_mode=0 gamemoderun supertuxkart -high
        fi
        
        if [[ $answer == "SuperTux 2" ]]; then
             vblankmode=0 gamemoderun supertux2 -high
        fi

        if [[ $answer == "Tux Racer" ]]; then
            vblankmode=0 gamemoderun tuxracer -high
        fi
        ;;
 'Openspades')
        answer="$(echo -e "No\nExecute with launch commands\nExecute normally" | dmenu -l 20 -i -p "Execute?")"

        if [[ $answer == "Execute with launch commands" ]]; then
            vblank_mode=0 gamemoderun openspades -high
        fi

        if 
		[[ $answer == "Execute normally" ]]; then
            openspades
        fi
        
        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Noita')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
           vblank_mode=0 gamemoderun sh ~/.games/Noita/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Crawl')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Crawl/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Factorio')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Factorio/bin/x64/factorio -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Cyber Shadow')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Cyber.Shadow/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Enter the Gungeon')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Enter.the.Gungeon/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Papers Please')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Papers.Please/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Goat Simulator')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblank_mode=0 gamemoderun sh ~/.games/GoatSimulator/Goatsimulator -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
         'Mindustry')
        answer="$(echo -e "No\nExecute with launch commands\nExecute normally" | dmenu -l 20 -i -p "Execute?")"

        if [[ $answer == "Execute with launch commands" ]]; then
            vblank_mode=0 gamemoderun mindustry -high
        fi

        if 
		   [[ $answer == "Execute normally" ]]; then
            mindustry
        fi
        
        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
   'Cuphead')
        answer="$(echo -e "No\nYes" | dmenu -l 20 -i -p "Execute?")"

        if 
                 [[ $answer == "Yes" ]]; then
            vblank_mode=0 gamemoderun ~/.games/Cuphead/start -high
        fi
        
        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Steam Client')
        answer="$(steam)"
        ;;
 'Nsnake')
        answer="$(st -e nsnake)"
        ;;
 'SteamWorld Quadrilogy')
        answer="$(echo -e "SteamWorld Dig\nSteamWorld Dig 2\nSteamWorld Heist\nSteamWorld Quest: Hand of Gilgamech" | dmenu -i -l 10 -p "Execute?")"

        if [[ $answer == "SteamWorld Dig" ]]; then
            vblankmode=0 gamemoderun ~/.games/Steamworld/Steamworld.Dig/start.sh -high
        fi

        if [[ $answer == "SteamWorld Dig 2" ]]; then
            vblankmode=0 gamemoderun ~/.games/Steamworld/Steamworld.Dig.2/start.sh -high
        fi

        if [[ $answer == "SteamWorld Heist" ]]; then
            vblankmode=0 gamemoderun ~/.games/Steamworld/Steamworld.Heist/start.sh -high
        fi

        if [[ $answer == "SteamWorld Quest: Hand of Gilgamech" ]]; then
            vblankmode=0 gamemoderun ~/.games/Steamworld/Steamworld.Quest.Hand.of.Gilgamech/start.sh -high
        fi
        ;;
 'Kingdom Rush Collection')
        answer="$(echo -e "Kingdom Rush\nKingdom Rush: Frontiers\nKingdom Rush: Origins\nKingdom Rush: Vengeance" | dmenu -i -l 5 -p "Execute?")"

        if [[ $answer == "Kingdom Rush" ]]; then
            vblankmode=0 gamemoderun sh ~/.games/KingdomRush/kingdomrush/start.sh -high
        fi

        if [[ $answer == "Kingdom Rush: Frontiers" ]]; then
            vblankmode=0 gamemoderun ~/.games/KingdomRush/kingdomrushfrontiers/start.sh -high
        fi

        if [[ $answer == "Kingdom Rush: Origins" ]]; then
            vblankmode=0 gamemoderun ~/.games/KingdomRush/kingdomrushorigins/start.sh -high
        fi

        if [[ $answer == "Kingdom Rush: Vengeance" ]]; then
            vblankmode=0 gamemoderun ~/.games/KingdomRush/kingdomrushvengeance/start.sh -high
        fi
        ;;
 'Hitman Collection')
        answer="$(echo -e "Hitman 2: Silent Assassin\nHitman: Contracts\nHitman: Blood Money\nHitman: Absolution\nHitman Go" | dmenu -i -l 20 -p "Execute?")"

        if [[ $answer == "Hitman 2: Silent Assassin" ]]; then
            vblankmode=0 gamemoderun ~/.games/Hitman.Collection/Hitman.2.Silent.Assassin/start.sh -high
        fi

        if [[ $answer == "Hitman: Contracts" ]]; then
            vblankmode=0 gamemoderun ~/.games/Hitman.Collection/Hitman.Contracts/start.sh -high
        fi

        if [[ $answer == "Hitman: Blood Money" ]]; then
            vblankmode=0 gamemoderun ~/.games/Hitman.Collection/Hitman.Blood.Money/start.sh -high
        fi

        if [[ $answer == "Hitman: Absolution" ]]; then
            vblankmode=0 gamemoderun ~/.games/Hitman.Collection/Hitman.Absolution/start -high
        fi

        if [[ $answer == "Hitman Go" ]]; then
            vblankmode=0 gamemoderun ~/.games/Hitman.Collection/Hitman.Go/start.sh -high
        fi
        ;;
 'Doom 3 BFG')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Doom.3.BFG/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Need for Speed Collection')
	 answer="$(echo -e "Need for Speed: Underground (2003)\nNeed for Speed: Most Wanted (2005)\nNeed for Speed: Carbon (2006)\nNeed for Speed: Pro Street (2007)\nNeed for Speed: Undercover (2008)\nNeed for Speed: Shift (2009)\nNeed for Speed: Hot Pursuit (2010)\nNeed for Speed: Shift 2 Unleashed (2011)\nNeed for Speed: Most Wanted (2012)" | dmenu -i -l 20 -p "Execute?")"

	 if [[ $answer == "Need for Speed: Underground (2003)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2003.Underground/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Most Wanted (2005)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2005.Most.Wanted/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Carbon (2006)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2006.Carbon/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Pro Street (2007)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2007.Pro.Street/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Undercover (2008)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2008.Undercover/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Shift (2009)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2009.Shift/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Hot Pursuit (2010)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2010.Hot.Pursuit/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Shift 2 Unleashed (2011)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2011.Shift.2.Unleashed/start.sh -high
        fi

	if [[ $answer == "Need for Speed: Most Wanted (2012)" ]]; then
            vblankmode=0 gamemoderun ~/.games/Need.For.Speed.Collection/2012.Most.Wanted/start.sh -high
        fi
        ;;
 'The Binding of Isaac: Afterbirth')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/The.Binding.of.Isaac.Afterbirth/run-x64.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Dustforce')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Dustforce/Dustforce.bin.x86_64 -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Undertale')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun sh ~/.games/Undertale/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Slime Rancher')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Slime.Rancher/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Owlboy')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Owlboy/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Broforce')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Broforce/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Reigns Collection')
        answer="$(echo -e "Reigns\nReigns: Her Majesty\nReigns: Game of Thrones\nReigns Companion Book\nReigns Soundtrack" | dmenu -i -l 5 -p "Execute?")"

        if [[ $answer == "Reigns" ]]; then
            vblankmode=0 gamemoderun ~/.games/Reigns.games/Reigns/start.sh -high
        fi

        if [[ $answer == "Reigns: Her Majesty" ]]; then
            vblankmode=0 gamemoderun ~/.games/Reigns.games/Reigns.Her.Majesty/start.sh -high
        fi

        if [[ $answer == "Reigns: Game of Thrones" ]]; then
            vblankmode=0 gamemoderun ~/.games/Reigns.games/Reigns.Game.of.Thrones/start.sh -high
        fi

        if [[ $answer == "Reigns Companion Book" ]]; then
            mupdf ~/.games/Reigns.games/bonus/reigns_companion_book/Reigns-Companion-Book.pdf
        fi

        if [[ $answer == "Reigns Soundtrack" ]]; then
            audacious ~/.games/Reigns.games/bonus/reigns_ost_flac
        fi
        ;;
 'Astromenace')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun astromenace -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '198X')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/198X/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Another Star')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
	vblankmode=0 gamemoderun ~/.games/Another.Star/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Brigador Up Armored Edition')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Brigador.Up.Armored.Edition/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Cathedral')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Cathedral/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Contra Anniversary Collection')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Contra.Anniversary.Collection/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Faster Than Light')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/FTL.Faster.Than.Light/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'MindSeize')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/MindSeize/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'NeuroVoider & ScourgeBringer')
        answer="$(echo -e "NeuroVoider\nScourgeBringer" | dmenu -i -p "Execute?")"

        if [[ $answer == "NeuroVoider" ]]; then
            vblankmode=0 gamemoderun ~/.games/NeuroVoider+ScourgeBringer/Neurovoider/start.sh -high
        fi

        if [[ $answer == "ScourgeBringer" ]]; then
            vblankmode=0 gamemoderun ~/.games/NeuroVoider+ScourgeBringer/ScourgeBringer/start.sh
        fi
        ;;
 'Spelunky Duology')
        answer="$(echo -e "Spelunky\nSpelunky 2" | dmenu -i -p "Execute?")"

        if [[ $answer == "Spelunky" ]]; then
            vblankmode=0 gamemoderun ~/.games/Spelunky+2/Spelunky/start.sh -high
        fi

        if [[ $answer == "Spelunky 2" ]]; then
            vblankmode=0 gamemoderun ~/.games/Spelunky+2/Spelunky.2/start.sh -high
        fi
        ;;
 'A Short Hike')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/A.Short.Hike/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'AER: Memories of Old')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/AER.Memories.of.Old/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Antichamber')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Antichamber/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Backland')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Backland/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Blasphemous')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Blasphemous/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Butcher')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Butcher/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'GoNNER Duology')
        answer="$(echo -e "GoNNER\nGoNNER 2: The Full Ikk Edition" | dmenu -i -p "Execute?")"

        if [[ $answer == "GoNNER" ]]; then
            vblankmode=0 gamemoderun ~/.games/GoNNER+2/GONNER/start.sh -high
        fi

        if [[ $answer == "GoNNER 2: The Full Ikk Edition" ]]; then
            vblankmode=0 gamemoderun ~/.games/GoNNER+2/GONNER2.The.Full.Ikk.Edition/start.sh -high
        fi
        ;;
 'Journey of a Roach')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Journey.of.a.Roach/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Katana ZERO')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
	vblankmode=0 gamemoderun ~/.games/Katana.ZERO/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Kingdoms and Castles')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Kingdoms.and.Castles/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Knightin')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Knightin/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Olija')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Olija/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Reventure')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Reventure/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Slipstream')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Slipstream/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Super Meat Boy')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Super.Meat.Boy/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Superbrothers: Sword & Sworcery EP')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Superbrother.Sword.Sworcery.EP/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Tangledeep')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Tangledeep/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'The Citadel')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/The.Citadel/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'The Swapper')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/The.Swapper/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Titan Souls')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Titan.Souls/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Wizard of Legend')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Wizard.of.Legend/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Donut County')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Donut.County/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Abandon Ship')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Abandon.Ship/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Osu Lazer')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun osu-lazer -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Forsaken Remastered')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Forsaken/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Drifting Lands')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Drifting.Lands/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Catmaze')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Catmaze/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Slain: Back from Hell')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Slain.Back.From.Hell/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 'Untitled Goose Game')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games/Untitled.Goose.Game/start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
 '')
        answer="$(echo -e "No\nYes" | dmenu -i -p "Execute?")"

        if [[ $answer == "Yes" ]]; then
            vblankmode=0 gamemoderun ~/.games//start.sh -high
        fi

        if [[ $answer == "No" ]]; then
            echo "quit" && exit 1
        fi
        ;;
	# It is a common practice to use the wildcard asterisk symbol (*) as a final
        # pattern to define the default case. This pattern will always match.
	*)
            exit 0
	;;
esac

}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
